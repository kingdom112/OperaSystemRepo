using ProtoBuf.Meta;

using UnityObject = UnityEngine.Object;
namespace Battlehub.RTSL
{
   public static partial class TypeModelCreator
   {
       static partial void RegisterAutoTypes(RuntimeTypeModel model)
       {
            m_createDefaultTypeModel = false;
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentObject), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentGameObject))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentMaterial))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentComponent))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentMesh))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentTexture))
                .AddSubType(1033, typeof(UnityEngine.Battlehub.SL2.PersistentFlare))
                .AddSubType(1034, typeof(UnityEngine.Battlehub.SL2.PersistentPhysicMaterial))
                .AddSubType(1037, typeof(UnityEngine.Battlehub.SL2.PersistentSprite))
                .AddSubType(1042, typeof(UnityEngine.Battlehub.SL2.PersistentAvatar))
                .AddSubType(1043, typeof(UnityEngine.Battlehub.SL2.PersistentRuntimeAnimatorController))
                .AddSubType(1044, typeof(UnityEngine.Battlehub.SL2.PersistentFont))
                .AddSubType(1045, typeof(RTSL.Battlehub.SL2.PersistentRuntimePrefab))
                .AddSubType(1046, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainData))
                .AddSubType(1047, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainLayer))
                .AddSubType(1048, typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationClip))
                .AddSubType(1049, typeof(UnityEngine.Battlehub.SL2.PersistentAudioClip))
                .AddSubType(1050, typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixer))
                .AddSubType(1051, typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixerGroup));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGameObject), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRenderer), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentMeshRenderer))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentSkinnedMeshRenderer))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemRenderer))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentSpriteRenderer))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentLineRenderer));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshRenderer), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshFilter), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkinnedMeshRenderer), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMesh), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMaterial), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRigidbody), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBoxCollider), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSphereCollider), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCapsuleCollider), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshCollider), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCamera), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioClip), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioSource), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLight), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAnimator), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioListener), true);
            model.Add(typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixer), true);
            model.Add(typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixerGroup), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAvatar), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseInputModule), true)
                .AddSubType(1025, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentPointerInputModule));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentBaseMeshEffect), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentShadow));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseRaycaster), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphicRaycaster));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBehaviour), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentCamera))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentLight))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentMonoBehaviour))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentAnimator))
                .AddSubType(1031, typeof(UnityEngine.Battlehub.SL2.PersistentCanvas))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentSkybox))
                .AddSubType(1033, typeof(UnityEngine.Battlehub.SL2.PersistentTerrain))
                .AddSubType(1034, typeof(UnityEngine.Battlehub.SL2.PersistentAudioSource))
                .AddSubType(1035, typeof(UnityEngine.Battlehub.SL2.PersistentAudioListener));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentButton), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCanvas), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCollider), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentBoxCollider))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentSphereCollider))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentCapsuleCollider))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentMeshCollider))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainCollider));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentComponent), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRenderer))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentTransform))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentMeshFilter))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentBehaviour))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentRigidbody))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentCollider))
                .AddSubType(1031, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystem))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemForceField));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentEventSystem), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentFlare), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentFont), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphic), true)
                .AddSubType(1027, typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphic));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphicRaycaster), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentImage), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLineRenderer), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphic), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentImage))
                .AddSubType(1026, typeof(UnityEngine.UI.Battlehub.SL2.PersistentText));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMonoBehaviour), true)
                .AddSubType(1026, typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditor))
                .AddSubType(1027, typeof(Cubeman.Battlehub.SL2.PersistentGameCameraFollow))
                .AddSubType(1028, typeof(RTEditor.Battlehub.SL2.PersistentGameViewCamera))
                .AddSubType(1030, typeof(Cubeman.Battlehub.SL2.PersistentCubemanCharacter))
                .AddSubType(1031, typeof(Cubeman.Battlehub.SL2.PersistentCubemanUserControl))
                .AddSubType(1032, typeof(Cubeman.Battlehub.SL2.PersistentCubemenGame))
                .AddSubType(1034, typeof(Cubeman.Battlehub.SL2.PersistentGameCharacter))
                .AddSubType(1035, typeof(Cubeman.Battlehub.SL2.PersistentGameFerry))
                .AddSubType(1036, typeof(Cubeman.Battlehub.SL2.PersistentGameFerryBehavior))
                .AddSubType(1037, typeof(Cubeman.Battlehub.SL2.PersistentGameFerryButton))
                .AddSubType(1038, typeof(Cubeman.Battlehub.SL2.PersistentGameGoal))
                .AddSubType(1039, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentUIBehaviour))
                .AddSubType(1040, typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimation))
                .AddSubType(1041, typeof(RTBuilder.Battlehub.SL2.PersistentMaterialPalette))
                .AddSubType(1042, typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBMesh))
                .AddSubType(1043, typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBPolyShape))
                .AddSubType(1044, typeof(RTTerrain.Battlehub.SL2.PersistentTerrainBrushSource))
                .AddSubType(1045, typeof(RTTerrain.Battlehub.SL2.PersistentTerrainToolState));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentOutline), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystem), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemRenderer), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentPhysicMaterial), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentPointerInputModule), true)
                .AddSubType(1025, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentStandaloneInputModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRectTransform), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRenderTexture), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRuntimeAnimatorController), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSelectable), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentButton));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentShadow), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentOutline));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrain), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainData), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkybox), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSprite), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSpriteRenderer), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentStandaloneInputModule), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainCollider), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentText), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRenderTexture))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentTexture2D))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentTexture3D));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture2D), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture3D), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTransform), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRectTransform));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentUIBehaviour), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphic))
                .AddSubType(1026, typeof(UnityEngine.UI.Battlehub.SL2.PersistentSelectable))
                .AddSubType(1027, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseRaycaster))
                .AddSubType(1028, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentEventSystem))
                .AddSubType(1029, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseInputModule))
                .AddSubType(1030, typeof(UnityEngine.UI.Battlehub.SL2.PersistentBaseMeshEffect));
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemanCharacter), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemanUserControl), true);
            model.Add(typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditor), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemenGame), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameCameraFollow), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameCharacter), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerry), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerryBehavior), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerryButton), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameGoal), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentGameViewCamera), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemForceField), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainLayer), true);
            model.Add(typeof(RTSL.Battlehub.SL2.PersistentRuntimePrefab), true)
                .AddSubType(1025, typeof(RTSL.Battlehub.SL2.PersistentRuntimeScene));
            model.Add(typeof(RTSL.Battlehub.SL2.PersistentRuntimeScene), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimation), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationClip), true);
            model.Add(typeof(RTBuilder.Battlehub.SL2.PersistentMaterialPalette), true);
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBMesh), true);
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBPolyShape), true);
            model.Add(typeof(RTTerrain.Battlehub.SL2.PersistentTerrainBrushSource), true);
            model.Add(typeof(RTTerrain.Battlehub.SL2.PersistentTerrainToolState), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector2), true);
            model.Add(typeof(UnityEngine.Vector2), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector2));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector3), true);
            model.Add(typeof(UnityEngine.Vector3), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector3));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector4), true);
            model.Add(typeof(UnityEngine.Vector4), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector4));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentColor), true);
            model.Add(typeof(UnityEngine.Color), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentColor));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentColor32), true);
            model.Add(typeof(UnityEngine.Color32), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentColor32));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMatrix4x4), true);
            model.Add(typeof(UnityEngine.Matrix4x4), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentMatrix4x4));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAnimationCurve), true);
            model.Add(typeof(UnityEngine.AnimationCurve), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentAnimationCurve));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentAnimationTriggers), true);
            model.Add(typeof(UnityEngine.UI.AnimationTriggers), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentAnimationTriggers));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBoneWeight), true);
            model.Add(typeof(UnityEngine.BoneWeight), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentBoneWeight));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBounds), true);
            model.Add(typeof(UnityEngine.Bounds), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentBounds));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentButtonNestedButtonClickedEvent), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentColorBlock), true);
            model.Add(typeof(UnityEngine.UI.ColorBlock), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentColorBlock));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentDetailPrototype), true);
            model.Add(typeof(UnityEngine.DetailPrototype), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentDetailPrototype));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradient), true);
            model.Add(typeof(UnityEngine.Gradient), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradient));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradientAlphaKey), true);
            model.Add(typeof(UnityEngine.GradientAlphaKey), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradientAlphaKey));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradientColorKey), true);
            model.Add(typeof(UnityEngine.GradientColorKey), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradientColorKey));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentKeyframe), true);
            model.Add(typeof(UnityEngine.Keyframe), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentKeyframe));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLayerMask), true);
            model.Add(typeof(UnityEngine.LayerMask), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentLayerMask));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLightBakingOutput), true);
            model.Add(typeof(UnityEngine.LightBakingOutput), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentLightBakingOutput));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphicNestedCullStateChangedEvent), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentNavigation), true);
            model.Add(typeof(UnityEngine.UI.Navigation), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentNavigation));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCollisionModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.CollisionModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCollisionModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorBySpeedModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ColorBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorBySpeedModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorOverLifetimeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ColorOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorOverLifetimeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCustomDataModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.CustomDataModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCustomDataModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedEmissionModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.EmissionModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedEmissionModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedExternalForcesModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ExternalForcesModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedExternalForcesModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedForceOverLifetimeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ForceOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedForceOverLifetimeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedInheritVelocityModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.InheritVelocityModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedInheritVelocityModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLightsModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.LightsModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLightsModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLimitVelocityOverLifetimeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLimitVelocityOverLifetimeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMainModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MainModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMainModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxCurve), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MinMaxCurve), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxCurve));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxGradient), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MinMaxGradient), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxGradient));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedNoiseModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.NoiseModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedNoiseModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationBySpeedModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.RotationBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationBySpeedModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationOverLifetimeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.RotationOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationOverLifetimeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedShapeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ShapeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedShapeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeBySpeedModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SizeBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeBySpeedModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeOverLifetimeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SizeOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeOverLifetimeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSubEmittersModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SubEmittersModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSubEmittersModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTrailModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TrailModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTrailModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTriggerModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TriggerModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTriggerModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedVelocityOverLifetimeModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedVelocityOverLifetimeModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTextureSheetAnimationModule), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTextureSheetAnimationModule));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentQuaternion), true);
            model.Add(typeof(UnityEngine.Quaternion), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentQuaternion));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRect), true);
            model.Add(typeof(UnityEngine.Rect), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentRect));
            model.Add(typeof(UnityEngine.SceneManagement.Battlehub.SL2.PersistentScene), true);
            model.Add(typeof(UnityEngine.SceneManagement.Scene), false).SetSurrogate(typeof(UnityEngine.SceneManagement.Battlehub.SL2.PersistentScene));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSpriteState), true);
            model.Add(typeof(UnityEngine.UI.SpriteState), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSpriteState));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTreeInstance), true);
            model.Add(typeof(UnityEngine.TreeInstance), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentTreeInstance));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTreePrototype), true);
            model.Add(typeof(UnityEngine.TreePrototype), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentTreePrototype));
            model.Add(typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditorUnityEvent), true);
            model.Add(typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEvent), true)
                .AddSubType(1032, typeof(UnityEngine.UI.Battlehub.SL2.PersistentButtonNestedButtonClickedEvent));
            model.Add(typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEventBase), true)
                .AddSubType(1025, typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEvent))
                .AddSubType(1026, typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditorUnityEvent))
                .AddSubType(1027, typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphicNestedCullStateChangedEvent));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedBurst), true);
            model.Add(typeof(UnityEngine.ParticleSystem.Burst), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedBurst));
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationProperty), true);
            model.Add(typeof(RTEditor.RuntimeAnimationProperty), false).SetSurrogate(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationProperty));
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBAutoUnwrapSettings), true);
            model.Add(typeof(ProBuilderIntegration.PBAutoUnwrapSettings), false).SetSurrogate(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBAutoUnwrapSettings));
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBFace), true);
            model.Add(typeof(ProBuilderIntegration.PBFace), false).SetSurrogate(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBFace));
            
       }
   }
}
namespace UnityEngine.Battlehub.SL2 {}
namespace System.Battlehub.SL2 {}
namespace UnityEngine.Rendering.Battlehub.SL2 {}
namespace UnityEngine.SceneManagement.Battlehub.SL2 {}
namespace UnityEngine.Audio.Battlehub.SL2 {}
namespace UnityEngine.EventSystems.Battlehub.SL2 {}
namespace UnityEngine.UI.Battlehub.SL2 {}
namespace Battlehub.Cubeman.Battlehub.SL2 {}
namespace Battlehub.RTCommon.Battlehub.SL2 {}
namespace Battlehub.RTEditor.Battlehub.SL2 {}
namespace Battlehub.RTSL.Battlehub.SL2 {}
namespace Battlehub.RTBuilder.Battlehub.SL2 {}
namespace System.Collections.Generic.Battlehub.SL2 {}
namespace Battlehub.ProBuilderIntegration.Battlehub.SL2 {}
namespace Battlehub.RTTerrain.Battlehub.SL2 {}
namespace UnityEngine.Events.Battlehub.SL2 {}


